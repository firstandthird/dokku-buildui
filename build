#!/bin/bash

UICACHE=/ui-cache
NODE_VERSION=0.10.28
NODE_URL="http://s3pository.heroku.com/node/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"
PATH=$UICACHE/vendor/node/bin:/app/node_modules/.bin:$PATH
LOG=$UICACHE/log

if [[ -z "$BUILDDEBUG" ]]; then
  BUILDDEBUG=1
fi
if [[ -z "$BUILDTIME" ]]; then
  BUILDTIME=1
fi

echo "Build Started: $(date)" > $LOG

. /app/.profile.d/app-env.sh

log() {
  if [[ "$BUILDTIME" == 1 ]]; then
    echo $(date) >> $LOG
  fi
  if [[ "$BUILDDEBUG" == 1 ]]; then
    echo $1 >> $LOG
  fi
}

cd /app

if [[ ! -f package.json || ! -f bower.json ]]; then
  exit 0
fi

#install node
if [[ ! -f $UICACHE/vendor/node/bin/node ]]; then
  # Resolve node version using semver.io

  # Download node from Heroku's S3 mirror of nodejs.org/dist
  log "start installing node"
  curl $NODE_URL -s -o - | tar xzf - -C $UICACHE

  # Move node (and npm) into ./vendor and make them executable
  mkdir -p $UICACHE/vendor
  mv $UICACHE/node-v$NODE_VERSION-linux-x64 $UICACHE/vendor/node
  chmod +x $UICACHE/vendor/node/bin/*
  log "end installing node"
else
  log "node already installed"
fi

#install npm deps
if [[ -f package.json ]]; then
  if [[ -f $UICACHE/node_modules.tar ]]; then
    log "start copying from node_modules cache"
    mv $UICACHE/node_modules.tar .
    tar xf node_modules.tar
    rm node_modules.tar
    log "end copying from node_modules cache"
  fi
  #TODO: bring this back
  #npm prune
  log "start npm install"
  npm install
  log "end npm install"
  if [[ ! -d node_modules/bower ]]; then
    log "start bower install"
    npm install bower
    log "end bower install"
  fi
  if [[ ! -d node_modules/grunt-cli ]]; then
    log "start grunt-cli install"
    npm install grunt-cli
    log "end grunt-cli install"
  fi
  log "start copy node_modules to cache"
  tar -cf node_modules.tar node_modules
  mv node_modules.tar $UICACHE/
  log "end copy node_modules to cache"
fi

#install bower deps
if [[ -f bower.json ]]; then
  if [[ -f $UICACHE/bower_components.tar ]]; then
    log "start copy bower_components from cache"
    mv $UICACHE/bower_components.tar .
    tar xf bower_components.tar
    rm bower_components.tar
    log "end copy bower_components from cache"
  fi
  log "start bower install"
  bower prune --allow-root --config.interactive=false
  bower install --allow-root --config.interactive=false
  log "end bower install"

  log "start copy bower_components to cache"
  tar -cf bower_components.tar bower_components
  mv bower_components.tar $UICACHE/
  log "end copy bower_components to cache"
fi

if [[ -f Gruntfile.js ]]; then
  log "start grunt $BUILDTASK"
  grunt $BUILDTASK
  log "end grunt $BUILDTASK"
fi
